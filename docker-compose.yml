version: "3.9"

services:
  web:
    build: .
    container_name: django_app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate &&
             python manage.py create_superuser --noinput || true &&
             gunicorn --bind 0.0.0.0:8000 internship.wsgi:application"

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis_server
    restart: always
    ports:
      - "6379:6379"

  celery:
    build: .
    container_name: celery_worker
    command: celery -A internship worker --loglevel=info
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

volumes:
  postgres_data:
